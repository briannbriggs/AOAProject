#include <iostream>
using namespace std;

int sequential_search(string text, string pattern, int &running_time) {
    int n = text.length();
    int m = pattern.length();
    running_time = 0;  // Initialize running time

    // Loop through the text to find the pattern
    for (int i = 0; i <= n - m; i++) {
        int j = 0;
        running_time++;  // Increment running time with each iteration of the outer loop

        // Check for the substring match
        while (j < m && text[i + j] == pattern[j]) {
            j++;
        }
        if (j == m) {
            return i; // Return the starting index if the pattern is found
        }
    }
    return -1; // Return -1 if the pattern is not found
}

int main() {
    string text = "vmpqooqkrkcvil";
    string pattern = "qooq";

    int running_time = 0;
    int index = sequential_search(text, pattern, running_time);

    if (index != -1) {
        cout << "Pattern \"" << pattern << "\" found at index " << index << " in the text." << endl;
        cout << "Running time: " << running_time << " iterations." << endl;
    } else {
        cout << "Pattern \"" << pattern << "\" not found in the text." << endl;
        cout << "Running time: " << running_time << " iterations." << endl;
    }

    return 0;
}
